{"version":3,"sources":["components/Nav/index.js","components/Card/index.js","components/Grid/Container.js","pages/EmployeeDirectory.js","utils/API.js","utils/sortFunctions.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","query","onInputChange","onSortChange","currentKey","currentOrder","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","key","label","map","style","color","onClick","onChange","value","placeholder","Card","children","data-id","Container","fluid","EmployeeDirectory","props","employees","length","employee","login","uuid","src","picture","large","alt","name","first","last","email","phone","toString","getUsers","axios","get","sortFunctions","compareValues","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","App","useState","employeesList","setEmployeesList","setEmployees","searchOptions","setSearchOptions","API","response","data","results","console","log","useEffect","loadEmployeesList","filtered","e","firstName","lastName","fullName","filter","toLowerCase","includes","sort","target","currentSearchOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ad800eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav({ query, onInputChange, onSortChange, currentKey, currentOrder }) {\r\n  const sorts = [\r\n    {\r\n      key: \"firstName\",\r\n      label: \"First Name\",\r\n    },\r\n    {\r\n      key: \"lastName\",\r\n      label: \"Last Name\",\r\n    },\r\n    {\r\n      key: \"phone\",\r\n      label: \"Phone Number\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <nav className='navbar navbar-expand-lg navbar-dark bg-primary justify-content-between mb-2'>\r\n      <a className='navbar-brand bg-primary navTitle' href='/'>\r\n        React Employee Directory\r\n      </a>\r\n      <button\r\n        className='navbar-toggler'\r\n        type='button'\r\n        data-toggle='collapse'\r\n        data-target='#navbarSupportedContent'\r\n        aria-controls='navbarSupportedContent'\r\n        aria-expanded='false'\r\n        aria-label='Toggle navigation'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n      <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n        <ul className='navbar-nav mr-auto'>\r\n          <span className='navbar-text'>Sort by: </span>\r\n          {sorts.map(({ key, label }) => (\r\n            <li key={key} className='nav-item m-1'>\r\n              <button\r\n                style={currentKey === key ? { color: \"orangered\" } : {}}\r\n                onClick={() =>\r\n                  onSortChange(key, currentOrder === \"asc\" ? \"desc\" : \"asc\")\r\n                }\r\n                className='btn'\r\n              >\r\n                {label} {\r\n                  currentKey !== key \r\n                  ? \"\"\r\n                  : currentOrder === \"asc\" \r\n                    ? (<i className=\"fas fa-chevron-circle-down\"></i>)\r\n                    : (<i className=\"fas fa-chevron-circle-up\"></i>)\r\n                }\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <form className='form-inline my-2 my-lg-0'>\r\n          <input\r\n            onChange={onInputChange}\r\n            className='form-control mr-sm-2'\r\n            type='search'\r\n            value={query}\r\n            placeholder='Search'\r\n            aria-label='Search'\r\n          />\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport './card.css';\r\n\r\nexport default function Card({ id, children }) {\r\n  return (\r\n    <div className=\"card employeeCard my-2\" data-id={id} >\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}","import React from 'react';\r\nimport Card from '../components/Card';\r\nimport { Container } from '../components/Grid';\r\nimport './employeeDirectory.css';\r\n\r\nfunction EmployeeDirectory(props) {\r\n  return (\r\n    <Container fluid>\r\n      {props.employees.length ? (\r\n        <div className=\"card-deck d-flex justify-content-center\">\r\n          {\r\n            props.employees.map(employee => {\r\n              return (\r\n                <Card key={employee.login.uuid.toString()} id={employee.login.uuid}>\r\n                  <img className=\"card-img-top\" src={employee.picture.large} alt={employee.name.first} />\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{employee.name.first} {employee.name.last}</h5>\r\n                    <p className=\"card-text\">Email: {employee.email}</p>\r\n                    <p className=\"card-text\">Phone: {employee.phone}</p>\r\n                  </div>\r\n                </Card>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      ) : (\r\n        <div className=\"absoluteCenter\"><div><i className=\"fas fa-spinner fa-pulse\"></i></div></div>\r\n        )}\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default EmployeeDirectory;","import axios from 'axios';\r\n\r\nconst getUsers = {\r\n  getUsers: function () {\r\n    return axios.get('https://randomuser.me/api/?results=100&nat=us&inc=name,email,phone,login,picture');\r\n  }\r\n}\r\n\r\nexport default getUsers;","const sortFunctions = {\r\n    // To be used with a sort function: Ex. singers.sort(compareValues('band', 'desc'));\r\n     compareValues: function(key, order = 'asc') {\r\n      return function innerSort(a, b) {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n          // property doesn't exist on either object\r\n          return 0;\r\n        }\r\n    \r\n        const varA = (typeof a[key] === 'string')\r\n          ? a[key].toUpperCase() : a[key];\r\n        const varB = (typeof b[key] === 'string')\r\n          ? b[key].toUpperCase() : b[key];\r\n    \r\n        let comparison = 0;\r\n        if (varA > varB) {\r\n          comparison = 1;\r\n        } else if (varA < varB) {\r\n          comparison = -1;\r\n        }\r\n        return (\r\n          (order === 'desc') ? (comparison * -1) : comparison\r\n        );\r\n      };\r\n    },\r\n  \r\n  };\r\n  \r\n  export default sortFunctions;","import React, { useState, useEffect } from \"react\";\nimport Nav from \"./components/Nav\";\nimport EmployeeDirectory from \"./pages/EmployeeDirectory\";\nimport API from \"./utils/API\";\nimport sortFunctions from \"./utils/sortFunctions\";\n\nfunction App() {\n  // EmployeesList is the master list, derived from the API.\n  const [employeesList, setEmployeesList] = useState([]);\n  // Employees is the array to be modified with sorting & filtering.\n  const [employees, setEmployees] = useState([]);\n\n  const [searchOptions, setSearchOptions] = useState({\n    key: \"firstName\",\n    order: \"asc\",\n    query: \"\",\n  });\n\n  const onQueryChange = (e) => {\n    const { value } = e.target;\n\n    setSearchOptions((currentSearchOptions) => ({\n      ...currentSearchOptions,\n      query: value,\n    }));\n  };\n\n  const onSortChange = (key, order) => {\n    setSearchOptions((currentSearchOptions) => ({\n      ...currentSearchOptions,\n      key,\n      order,\n    }));\n  };\n\n  // Load all employees and store them with setEmployeesList\n  useEffect(() => {\n    loadEmployeesList();\n  }, []);\n\n  // Only sets employees array once employeesList has changed.\n  useEffect(() => {\n    const modified = employeesList.map((e) => ({\n      ...e,\n      firstName: e.name.first,\n      lastName: e.name.last,\n      fullName: `${e.name.first} ${e.name.last}`,\n    }));\n\n    const filtered = modified.filter((employee) =>\n      employee.fullName\n        .toLowerCase()\n        .includes(searchOptions.query.toLowerCase())\n    );\n\n    filtered.sort(\n      sortFunctions.compareValues(searchOptions.key, searchOptions.order)\n    );\n\n    setEmployees(filtered);\n  }, [employeesList, searchOptions]);\n\n  // Loads all employees and sets them to employeesList\n  async function loadEmployeesList() {\n    try {\n      const response = await API.getUsers();\n      setEmployeesList(response.data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div>\n      <Nav\n        query={searchOptions.query}\n        onInputChange={onQueryChange}\n        onSortChange={onSortChange}\n        currentKey={searchOptions.key}\n        currentOrder={searchOptions.order}\n      />\n      <EmployeeDirectory employees={employees}></EmployeeDirectory>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}